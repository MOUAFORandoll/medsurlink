<?php

namespace App\Models;

use App\Scopes\RestrictArchievedAt;
use App\Scopes\RestrictDossierScope;
use App\User;
use Carbon\Carbon;
use Cviebrock\EloquentSluggable\Sluggable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Str;

class CompteRenduOperatoire extends Model
{
    use SoftDeletes;
    use Sluggable;

    protected $fillable = [
        "etablissement_id",
        "dossier_medical_id",
        'type_intervention',
        'histoire_clinique',
        'date_intervention',
        'chirugiens',
        'aides',
        'circulants',
        'anesthesistes',
        'type_anesthesie',
        'description',
        'traitement_post_operatoire',
        'archieved_at',
        'passed_at',
        'creator',
        'slug',
    ];

    /**
     * Return the sluggable configuration array for this model.
     *
     * @return array
     */
    public function sluggable()
    {
        return [
            'slug' => [
                'source' => 'DossierAndTimestamp'
            ]
        ];
    }
    public function getDossierAndTimestampAttribute() {
        return Str::random(10) . ' ' .Carbon::now()->timestamp;
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        //On définit le créateur à la création du suivi
        CompteRenduOperatoire::creating(function ($compteRenduOperatoire){
            $compteRenduOperatoire->creator = Auth::id();
        });

        static::addGlobalScope(new RestrictDossierScope);
        static::addGlobalScope(new RestrictArchievedAt);
    }

    public function createur(){
        return $this->belongsTo(User::class,'creator','id');
    }

    public function dossier(){
        return $this->belongsTo(DossierMedical::class,'dossier_medical_id','id');
    }

    public function etablissement(){
        return $this->belongsTo(EtablissementExercice::class,'etablissement_id','id');
    }

    public function updateCompteRendu()
    {
        $this['isAuthor'] = Auth::id() == $this->creator;
        $connectedUser = Auth::user();
        if (Auth::id() == $this->creator){
            $this['canUpdate'] = true;
        } elseif ($connectedUser->getRoleNames()->first() == 'Praticien') {
            $this['canUpdate'] = Auth::id() == $this->creator;
        } elseif ($connectedUser->getRoleNames()->first() == 'Medecin controle') {
            $this['canUpdate'] = is_null($this->archieved_at);
        }
    }
}
